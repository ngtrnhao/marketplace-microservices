version: '3.8'

services:
  auth-service:
    build:
      context: ./services/auth-service
      dockerfile: Dockerfile
    ports:
      - '3001:3001'
    environment:
      - NODE_ENV=development
      - PORT=3001
      # Redis Configuration
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      # MongoDB Configuration
      - MONGODB_URI=${MONGODB_URI}
      - MONGODB_MIN_POOL_SIZE=5
      - MONGODB_MAX_POOL_SIZE=10
      - MONGODB_RETRY_ATTEMPTS=3
      - MONGODB_RETRY_DELAY=1000
      - MONGODB_MONITORING_ENABLED=true
      # JWT Configuration
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRES_IN=1h
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - JWT_EXPIRATION=${JWT_EXPIRATION}
      - JWT_REFRESH_EXPIRATION=7d
      # SMTP Configuration
      - SMTP_FROM=${SMTP_FROM}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASS=${SMTP_PASS}
      # Application URL
      - APP_URL=http://localhost:3001/api
    depends_on:
      - redis
      - mongodb
    networks:
      - marketplace-network

  redis:
    image: redis:alpine
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    networks:
      - marketplace-network
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      timeout: 3s
      retries: 3

  mongodb:
    image: mongo:latest
    ports:
      - '27017:27017'
    volumes:
      - mongodb_data:/data/db
    networks:
      - marketplace-network

networks:
  marketplace-network:
    driver: bridge

volumes:
  redis_data:
  mongodb_data:
